manifest {
    mainScript = 'evochain.nf'
    name = 'Evochain'
    nextflowVersion = '!>=24.10.4'
}

ansi = false

// default parameters
params {
    max_cores = Runtime.runtime.availableProcessors()
    cores = Runtime.runtime.availableProcessors().intdiv(4)
    params {
    // ... existing params ...
    gff3 = ''
    protein = ''
    gene = ''
    go_terms = ''
    gene_name = ''
    gene_description = ''
}

}
// runinfo
timeline {
  enabled = true
  overwrite = true  
  file = "${params.output}/${params.runinfo}/execution_timeline.html"
}

report {
  enabled = true
  overwrite = true  
  file = "${params.output}/${params.runinfo}/execution_report.html"
}

profiles {
    stub {
        params {
            max_cores = 2
            cores = 2
        }
    }

    standard {
        workDir = params.workdir
        docker { enabled = true }
        includeConfig 'configs/local.config'
        includeConfig 'configs/docker.config'
        params { databases = 'nextflow-autodownload-databases' }
    }

    local {
        workDir = params.workdir
        includeConfig 'configs/local.config'
        params { databases = 'nextflow-autodownload-databases' }
    }
    
    docker {
        docker { enabled = true }
        includeConfig 'configs/docker.config'
    }

    singularity {
        singularity { 
                enabled = true
                autoMounts = true
                cacheDir = params.cachedir
                envWhitelist = "HTTPS_PROXY,HTTP_PROXY,http_proxy,https_proxy,FTP_PROXY,ftp_proxy"
        }
        includeConfig 'configs/docker.config'
    }

    slurm {
        executor {
            name = "slurm"
            queueSize = 100
            // exitReadTimeout = "360 sec"
            // submitRateLimit = '1 / 2 s'
            // pollInterval = '30 sec'
        }
        params { databases = 'nextflow-autodownload-databases' }
        process.cache = "lenient"
        includeConfig 'configs/gcloud.config'
    }

    lsf {
        executor {
            name = "lsf"
            queueSize = 100
            // exitReadTimeout = "360 sec"
            // submitRateLimit = '1 / 2 s'
            // pollInterval = '30 sec'
        }
        params { databases = 'nextflow-autodownload-databases' }
        process.cache = "lenient"
        includeConfig 'configs/gcloud.config'
    }

    ukj_cloud { 
        workDir = 'gs://case-tmp-dir/MACABRE'
        docker { enabled = true } 
        process { executor = 'google-batch' }
        params { databases = 'gs://databases-case-grp/MACABRE' }
        google {  
            project = 'case-dev-302214'
            location = 'europe-west4'
            batch { 
                spot = true
                maxSpotAttempts = 4
                bootDiskSize = 50.GB
            }
        }
        includeConfig 'configs/docker.config'
        includeConfig 'configs/gcloud.config'
        
        // cloud error strategy
        //process { errorStrategy = { task.exitStatus in [14,143,137,104,134,139] ? 'retry' : 'terminate' } }
        //process { maxRetries = 3 }
    }
}