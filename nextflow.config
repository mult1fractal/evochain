manifest {
    mainScript = 'evochain.nf'
    name = 'Evochain'
    nextflowVersion = '!>=24.10.4'
}

ansi = false

// default parameters
params {
    max_cores = Runtime.runtime.availableProcessors()
    cores = Runtime.runtime.availableProcessors().intdiv(4)

    // ... existing params ...
    gff3 = ''
    protein = ''
    gene = ''
    go_terms = ''
    gene_name = ''
    gene_description = ''



        // folder structure
    output = 'results'
    databases = 'nextflow-autodownload-databases'
    workdir = "/tmp/nextflow-evochain-$USER"
    cachedir = "singularity_images"

    // Profiles
    executor = 'local'
    engine = 'docker'


}
// runinfo
timeline {
  enabled = true
  overwrite = true  
  file = "${params.output}/runinfo/execution_timeline.html"
}

report {
  enabled = true
  overwrite = true    
  file = "${params.output}/runinfo/execution_report.html"
}

profiles {
    // testrun profile
   
    
    stub {

        params.cores = 2
    
    }

    //executer
    local {
        executor {
                name = "local"
               	cpus = params.max_cores
        }
        workDir = params.workdir
        includeConfig 'configs/local.config'
    }


    ukj_cloud { 
        workDir = params.workdir
        docker { enabled = true } 
        process { 
                executor = 'google-batch' 
                errorStrategy = { task.exitStatus in [10,14,143,137,104,134,139] ? 'retry' : 'terminate' }
                maxRetries = 3
                withLabel: noDocker           { container = 'nanozoo/template:3.8--d089809' }
        }
        params { databases = 'gs://databases-case-grp/What-the-Phage' }
        bucketDir = 'gs://case-tmp-dir/What-the-Phage'
        google {  
            project = 'case-dev-302214'
            location = 'europe-west4'
            batch{ 
                spot = true
                bootDiskSize = 50.GB
            }
        }
        includeConfig 'configs/docker.config'
        includeConfig 'configs/gcloud.config'
    }




    //engines
    docker {
        docker { enabled = true }
        includeConfig 'configs/docker.config'
    }

   
    }